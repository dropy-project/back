version: '3.7'

services:
  postgres:
    image: postgres:14.1-alpine
    networks:
      - back
    environment:
      TZ: Europe/Paris
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
    volumes:
      - ./data:/var/lib/postgresql/data

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - '127.0.0.1:${API_PORT}:3000'
    depends_on:
      - postgres
    environment:
      TZ: Europe/Paris
      DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}'
      API_PORT: '${API_PORT}'
    networks:
      - back
      - api-req

  studio:
    build:
      context: .
      dockerfile: Dockerfile.studio
    ports:
      - '127.0.0.1:${STUDIO_PORT}:5555'
    depends_on:
      - postgres
    environment:
      TZ: Europe/Paris
      DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}'
      STUDIO_PORT: '${STUDIO_PORT}'
    networks:
      - back
  
  content:
    build:
      context: .
      dockerfile: Dockerfile.content
    ports:
      - '127.0.0.1:${CONTENT_PORT}:6000'
    environment:
      TZ: Europe/Paris
      DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}'
      CONTENT_PORT: '${CONTENT_PORT}'
    networks:
     - back
    volumes:
      - ./.content:/app/.content

  socket:
    build:
      context: .
      dockerfile: Dockerfile.socket
    depends_on:
      - postgres
    environment:
      TZ: Europe/Paris
      DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}'
      SOCKET_PORT: '${SOCKET_PORT}'
    ports:
      - '127.0.0.1:${SOCKET_PORT}:4000'
    networks:
     - back

networks:
  back:
  api-req:
    driver: bridge
